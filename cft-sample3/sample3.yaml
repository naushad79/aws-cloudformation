AWSTemplateFormatVersion: "2010-09-09"

Description: "In this cloudformation template EC2 instance will get the AMI based on the mapping created within the Mappings"

# Find all regions from https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html

Mappings:
  AWSRegionMap:
    us-east-1:          # US East (N. Virginia)
      AMI: ami-009d6802948d06e52
    us-east-2:          # US East (Ohio)
      AMI: ami-02e680c4540db351e
    us-west-1:          # US West (N. California)
      AMI: ami-011b6930a81cd6aaf
    us-west-2:          # US West (Oregon)
      AMI: ami-01bbe152bf19d0289
    ap-southeast-1:     # Asia Pacific (Singapore)
      AMI: ami-0b84d2c53ad5250c2
    ap-southeast-2:     # Asia Pacific (Sydney)
      AMI: ami-08589eca6dcc9b39c
    eu-west-1:          # EU (Ireland)
      AMI: ami-09693313102a30b2
    eu-west-2:          # EU (London)
      AMI: ami-0274e11dced17bb5b
    eu-west-3:          # EU (Paris)
      AMI: ami-051707cdba246187b


Resources:
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId:
        Fn::FindInMap:
        - AWSRegionMap
        - !Ref AWS::Region
        - AMI

      Tags:
        - Key: Name
          Value: !Join
            - ""
            - - "WebServer - "
              - !Ref "AWS::Region"  # Pseudo Parameters will return the Region

        - Key: StackName
          Value: !Join
            - ""
            - - "WebServer - "
              - !Ref "AWS::StackName" # Pseudo Parameters will return the Stack Name

        - Key: StackID
          Value: !Join
            - ""
            - - "WebServer - "
              - !Ref "AWS::StackId" # Pseudo Parameters will return the Stack ID

        - Key: Author
          Value: !Join [ " ", [ Mohamed, Naushad, Binjima ] ] # have used join Intrinsic Function

      SecurityGroups:
          - !Ref MySecurityGroup

  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: Public-SSH
      GroupDescription: Allow ssh connection over port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: Inboud-Public
